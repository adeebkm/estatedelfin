{"ast":null,"code":"var _jsxFileName = \"/Users/adeebkhaja/Documents/estatedelfin/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\n// Create AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// API base URL\nconst API_URL = 'http://localhost:5001/api';\n\n// Configure axios\naxios.defaults.baseURL = API_URL;\naxios.defaults.headers.common['Content-Type'] = 'application/json';\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token') || null,\n  loading: false,\n  isAuthenticated: false,\n  tempUserId: null,\n  // For OTP verification\n  pendingVerification: false\n};\n\n// Auth reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        tempUserId: null,\n        pendingVerification: false\n      };\n    case 'REGISTER_SUCCESS':\n      return {\n        ...state,\n        tempUserId: action.payload.userId,\n        pendingVerification: true,\n        loading: false\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        tempUserId: null,\n        pendingVerification: false\n      };\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true\n      };\n    case 'VERIFICATION_PENDING':\n      return {\n        ...state,\n        tempUserId: action.payload.userId,\n        pendingVerification: true,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\n// AuthProvider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set token in axios headers\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n      localStorage.setItem('token', state.token);\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n    }\n  }, [state.token]);\n\n  // Load user on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      if (state.token) {\n        try {\n          const response = await axios.get('/auth/profile');\n          dispatch({\n            type: 'SET_USER',\n            payload: response.data.user\n          });\n        } catch (error) {\n          console.error('Error loading user:', error);\n          dispatch({\n            type: 'LOGOUT'\n          });\n        }\n      }\n    };\n    loadUser();\n  }, [state.token]);\n\n  // Register user\n  const register = async userData => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await axios.post('/auth/register', userData);\n      if (response.data.requiresVerification) {\n        dispatch({\n          type: 'REGISTER_SUCCESS',\n          payload: {\n            userId: response.data.userId\n          }\n        });\n        toast.success('Registration successful! Please verify your email with the OTP sent.');\n        return {\n          success: true,\n          requiresVerification: true\n        };\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Login user\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await axios.post('/auth/login', credentials);\n      if (response.data.requiresVerification) {\n        dispatch({\n          type: 'VERIFICATION_PENDING',\n          payload: {\n            userId: response.data.userId\n          }\n        });\n        toast.info('Please verify your email with the OTP sent.');\n        return {\n          success: true,\n          requiresVerification: true\n        };\n      }\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: response.data.user,\n          token: response.data.token\n        }\n      });\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Verify OTP\n  const verifyOTP = async otp => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await axios.post('/auth/verify-otp', {\n        userId: state.tempUserId,\n        otp\n      });\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: response.data.user,\n          token: response.data.token\n        }\n      });\n      toast.success('Email verified successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'OTP verification failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Resend OTP\n  const resendOTP = async () => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      await axios.post('/auth/resend-otp', {\n        userId: state.tempUserId\n      });\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      toast.success('OTP resent successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to resend OTP';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Logout\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n    toast.success('Logged out successfully!');\n  };\n\n  // Update profile\n  const updateProfile = async profileData => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await axios.put('/auth/profile', profileData);\n      dispatch({\n        type: 'SET_USER',\n        payload: response.data.user\n      });\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      toast.success('Profile updated successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const value = {\n    user: state.user,\n    token: state.token,\n    loading: state.loading,\n    isAuthenticated: state.isAuthenticated,\n    tempUserId: state.tempUserId,\n    pendingVerification: state.pendingVerification,\n    register,\n    login,\n    logout,\n    verifyOTP,\n    resendOTP,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","toast","jsxDEV","_jsxDEV","AuthContext","API_URL","defaults","baseURL","headers","common","initialState","user","token","localStorage","getItem","loading","isAuthenticated","tempUserId","pendingVerification","authReducer","state","action","type","payload","userId","AuthProvider","children","_s","dispatch","setItem","removeItem","loadUser","response","get","data","error","console","register","userData","post","requiresVerification","success","_error$response","_error$response$data","message","login","credentials","info","_error$response2","_error$response2$data","verifyOTP","otp","_error$response3","_error$response3$data","resendOTP","_error$response4","_error$response4$data","logout","updateProfile","profileData","put","_error$response5","_error$response5$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/adeebkhaja/Documents/estatedelfin/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\n// Create AuthContext\nconst AuthContext = createContext();\n\n// API base URL\nconst API_URL = 'http://localhost:5001/api';\n\n// Configure axios\naxios.defaults.baseURL = API_URL;\naxios.defaults.headers.common['Content-Type'] = 'application/json';\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token') || null,\n  loading: false,\n  isAuthenticated: false,\n  tempUserId: null, // For OTP verification\n  pendingVerification: false\n};\n\n// Auth reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    \n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        tempUserId: null,\n        pendingVerification: false\n      };\n    \n    case 'REGISTER_SUCCESS':\n      return {\n        ...state,\n        tempUserId: action.payload.userId,\n        pendingVerification: true,\n        loading: false\n      };\n    \n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        tempUserId: null,\n        pendingVerification: false\n      };\n    \n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true\n      };\n    \n    case 'VERIFICATION_PENDING':\n      return {\n        ...state,\n        tempUserId: action.payload.userId,\n        pendingVerification: true,\n        loading: false\n      };\n    \n    default:\n      return state;\n  }\n};\n\n// AuthProvider component\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Set token in axios headers\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n      localStorage.setItem('token', state.token);\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n    }\n  }, [state.token]);\n\n  // Load user on app start\n  useEffect(() => {\n    const loadUser = async () => {\n      if (state.token) {\n        try {\n          const response = await axios.get('/auth/profile');\n          dispatch({\n            type: 'SET_USER',\n            payload: response.data.user\n          });\n        } catch (error) {\n          console.error('Error loading user:', error);\n          dispatch({ type: 'LOGOUT' });\n        }\n      }\n    };\n\n    loadUser();\n  }, [state.token]);\n\n  // Register user\n  const register = async (userData) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      \n      const response = await axios.post('/auth/register', userData);\n      \n      if (response.data.requiresVerification) {\n        dispatch({\n          type: 'REGISTER_SUCCESS',\n          payload: { userId: response.data.userId }\n        });\n        toast.success('Registration successful! Please verify your email with the OTP sent.');\n        return { success: true, requiresVerification: true };\n      }\n      \n      return { success: true };\n    } catch (error) {\n      dispatch({ type: 'SET_LOADING', payload: false });\n      const message = error.response?.data?.message || 'Registration failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Login user\n  const login = async (credentials) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      \n      const response = await axios.post('/auth/login', credentials);\n      \n      if (response.data.requiresVerification) {\n        dispatch({\n          type: 'VERIFICATION_PENDING',\n          payload: { userId: response.data.userId }\n        });\n        toast.info('Please verify your email with the OTP sent.');\n        return { success: true, requiresVerification: true };\n      }\n      \n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: response.data.user,\n          token: response.data.token\n        }\n      });\n      \n      toast.success('Login successful!');\n      return { success: true };\n    } catch (error) {\n      dispatch({ type: 'SET_LOADING', payload: false });\n      const message = error.response?.data?.message || 'Login failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Verify OTP\n  const verifyOTP = async (otp) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      \n      const response = await axios.post('/auth/verify-otp', {\n        userId: state.tempUserId,\n        otp\n      });\n      \n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: response.data.user,\n          token: response.data.token\n        }\n      });\n      \n      toast.success('Email verified successfully!');\n      return { success: true };\n    } catch (error) {\n      dispatch({ type: 'SET_LOADING', payload: false });\n      const message = error.response?.data?.message || 'OTP verification failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Resend OTP\n  const resendOTP = async () => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      \n      await axios.post('/auth/resend-otp', {\n        userId: state.tempUserId\n      });\n      \n      dispatch({ type: 'SET_LOADING', payload: false });\n      toast.success('OTP resent successfully!');\n      return { success: true };\n    } catch (error) {\n      dispatch({ type: 'SET_LOADING', payload: false });\n      const message = error.response?.data?.message || 'Failed to resend OTP';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  // Logout\n  const logout = () => {\n    dispatch({ type: 'LOGOUT' });\n    toast.success('Logged out successfully!');\n  };\n\n  // Update profile\n  const updateProfile = async (profileData) => {\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      \n      const response = await axios.put('/auth/profile', profileData);\n      \n      dispatch({\n        type: 'SET_USER',\n        payload: response.data.user\n      });\n      \n      dispatch({ type: 'SET_LOADING', payload: false });\n      toast.success('Profile updated successfully!');\n      return { success: true };\n    } catch (error) {\n      dispatch({ type: 'SET_LOADING', payload: false });\n      const message = error.response?.data?.message || 'Profile update failed';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  const value = {\n    user: state.user,\n    token: state.token,\n    loading: state.loading,\n    isAuthenticated: state.isAuthenticated,\n    tempUserId: state.tempUserId,\n    pendingVerification: state.pendingVerification,\n    register,\n    login,\n    logout,\n    verifyOTP,\n    resendOTP,\n    updateProfile\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}